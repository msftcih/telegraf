# Azure Event Hubs service input plugin
[[inputs.eventhub_consumer]]
  ## The default behavior is to create a new Event Hub client from environment variables.
  ## This requires one of the following sets of environment variables to be set:
  ##
  ## 1) Expected Environment Variables:
  ##    - "EVENTHUB_CONNECTION_STRING"
  ##
  ## 2) Expected Environment Variables:
  ##    - "EVENTHUB_NAMESPACE"
  ##    - "EVENTHUB_NAME"
  ##    - "EVENTHUB_KEY_NAME"
  ##    - "EVENTHUB_KEY_VALUE"

  ## 3) Expected Environment Variables:
  ##    - "EVENTHUB_NAMESPACE"
  ##    - "EVENTHUB_NAME"
  ##    - "AZURE_TENANT_ID"
  ##    - "AZURE_CLIENT_ID"
  ##    - "AZURE_CLIENT_SECRET"

  ## Uncommenting the option below will create an Event Hub client based solely on the connection string.
  ## This can either be the associated environment variable or hard coded directly.
  ## If this option is uncommented, environment variables will be ignored.
  ## Connection string should contain EventHubName (EntityPath)
  # connection_string = ""

  ## Azure Managed Identity Authentication
  ## Enable this option to use Azure Managed Identity for authentication instead of connection strings or environment variables.
  ## The plugin supports both traditional Managed Identity (for VMs) and Azure Workload Identity (for AKS pods).
  # use_managed_identity = false

  ## Event Hub namespace (required when using managed identity)
  ## This should be the fully qualified namespace name (e.g., "myeventhubnamespace.servicebus.windows.net")
  # eventhub_namespace = ""

  ## Event Hub name (required when using managed identity)
  ## This should be the name of the specific Event Hub within the namespace
  # eventhub_name = ""

  ## Managed Identity Client ID (optional)
  ## If specified, will use User-Assigned Managed Identity with the given client ID.
  ## If not specified (or empty), will use System-Assigned Managed Identity.
  ## This should be the client ID (GUID) of the User-Assigned Managed Identity.
  ## 
  ## Azure Workload Identity Support (AKS):
  ## When running in AKS with Azure Workload Identity enabled, the plugin automatically detects
  ## the workload identity environment variables (AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_FEDERATED_TOKEN_FILE)
  ## and uses OIDC token exchange for authentication. This is the preferred method for AKS deployments.
  ##
  ## Authentication Priority (when use_managed_identity = true):
  ## 1. Azure Workload Identity (if environment variables are detected)
  ## 2. User-Assigned Managed Identity (if managed_identity_id is specified)
  ## 3. System-Assigned Managed Identity (default fallback)
  ##
  ## Troubleshooting:
  ## - Ensure the identity has "Azure Event Hubs Data Receiver" role on the Event Hub namespace
  ## - For Workload Identity: verify the service account has proper annotations and federated credentials
  ## - For Managed Identity: ensure the identity exists and is accessible from the pod/VM
  ## - Check Azure roles and permissions on both the identity and Event Hub resources
  # managed_identity_id = ""

  ## Set persistence directory to a valid folder to use a file persister instead of an in-memory persister
  # persistence_dir = ""

  ## Change the default consumer group
  ## When using managed identity, this specifies which consumer group to use for reading from the Event Hub.
  ## The default is "$Default" which is the standard Event Hub consumer group.
  ## Each consumer group maintains its own set of offsets for tracking message consumption.
  # consumer_group = "$Default"

  ## By default the event hub receives all messages present on the broker, alternative modes can be set below.
  ## The timestamp should be in https://github.com/toml-lang/toml#offset-date-time format (RFC 3339).
  ## The 3 options below only apply if no valid persister is read from memory or file (e.g. first run).
  # from_timestamp =
  # latest = true

  ## Set a custom prefetch count for the receiver(s)
  # prefetch_count = 1000

  ## Add an epoch to the receiver(s)
  # epoch = 0

  ## Change to set a custom user agent, "telegraf" is used by default
  # user_agent = "telegraf"

  ## To consume from a specific partition, set the partition_ids option.
  ## An empty array will result in receiving from all partitions.
  # partition_ids = ["0","1"]

  ## Max undelivered messages
  ## This plugin uses tracking metrics, which ensure messages are read to
  ## outputs before acknowledging them to the original broker to ensure data
  ## is not lost. This option sets the maximum messages to read from the
  ## broker that have not been written by an output.
  ##
  ## This value needs to be picked with awareness of the agent's
  ## metric_batch_size value as well. Setting max undelivered messages too high
  ## can result in a constant stream of data batches to the output. While
  ## setting it too low may never flush the broker's messages.
  # max_undelivered_messages = 1000

  ## Set either option below to true to use a system property as timestamp.
  ## You have the choice between EnqueuedTime and IoTHubEnqueuedTime.
  ## It is recommended to use this setting when the data itself has no timestamp.
  # enqueued_time_as_ts = true
  # iot_hub_enqueued_time_as_ts = true

  ## Tags or fields to create from keys present in the application property bag.
  ## These could for example be set by message enrichments in Azure IoT Hub.
  # application_property_tags = []
  # application_property_fields = []

  ## Tag or field name to use for metadata
  ## By default all metadata is disabled
  # sequence_number_field = "SequenceNumber"
  # enqueued_time_field = "EnqueuedTime"
  # offset_field = "Offset"
  # partition_id_tag = "PartitionID"
  # partition_key_tag = "PartitionKey"
  # iot_hub_device_connection_id_tag = "IoTHubDeviceConnectionID"
  # iot_hub_auth_generation_id_tag = "IoTHubAuthGenerationID"
  # iot_hub_connection_auth_method_tag = "IoTHubConnectionAuthMethod"
  # iot_hub_connection_module_id_tag = "IoTHubConnectionModuleID"
  # iot_hub_enqueued_time_field = "IoTHubEnqueuedTime"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "influx"
