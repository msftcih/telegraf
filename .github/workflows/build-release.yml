name: ACR Build Release
 
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment Type'
        type: environment
        required: true
 
jobs:
  docker_build:
    name: 'Build Image'
    runs-on: ubuntu-latest
    environment: development
    outputs:
      dt-now: ${{ steps.dt-now.outputs.NOW }}
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Create Datetime Tag
      id: dt-now
      run: echo "NOW=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV >> $GITHUB_OUTPUT
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Export Telegraf
      uses: docker/build-push-action@v6
      with:
        push: false
        tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf
        file: scripts/bullseye.docker
        outputs: type=docker,dest=/tmp/telegraf-image.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegraf-image
        path: /tmp/telegraf-image.tar
  
  dev_publish:
    name: 'Publish ACR Dev'
    runs-on: ubuntu-latest
    environment: 'development'
    permissions:
      contents: none
    needs: [docker_build]

    steps:
      - name: Download artifacts (Docker images) from previous workflows
        uses: actions/download-artifact@v4
        with:
          name: telegraf-image
          path: /tmp
      
      - name: Load telegraf image
        run: |
          docker load --input /tmp/telegraf-image.tar
          docker image tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf:master-${{ needs.docker_build.outputs.dt-now }}
          docker image ls -a

      - name: 'ACR Login'
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Dev
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf:master-${{ needs.docker_build.outputs.dt-now }}

  prod_publish:
    name: 'Publish ACR Prod'
    runs-on: ubuntu-latest
    environment: 'production'
    permissions:
      contents: none
    needs: [docker_build, dev_publish]

    steps:
      - name: Download artifacts (Docker images) from previous workflows
        uses: actions/download-artifact@v4
        with:
          name: telegraf-image
          path: /tmp
      
      - name: Load telegraf image
        run: |
          docker load --input /tmp/telegraf-image.tar
          docker image tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/telegraf ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}/telegraf:master-${{ needs.docker_build.outputs.dt-now }}
          docker image ls -a

      - name: 'ACR Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}
          username: ${{ secrets.REGISTRY_USERNAME_PROD }}
          password: ${{ secrets.REGISTRY_PASSWORD_PROD }}

      - name: Push Dev
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}/telegraf:master-${{ needs.docker_build.outputs.dt-now }}

